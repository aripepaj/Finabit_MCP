name: Release MCP

on:
  push:
    tags:
      - 'mcp-v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Determine tag
        id: vars
        shell: bash
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"

      - name: Build executable
        shell: pwsh
        run: |
          # Adjust add-data lines to include any needed files/folders
          pyinstaller --onefile main.py --name FinabitMCP `
            --add-data "static;static" `
            --add-data "manifest.json;." `
            --add-data ".env.template;."
      
      - name: Create ZIP
        id: zip
        shell: pwsh
        run: |
          $zip = "FinabitMCP_${{ steps.vars.outputs.TAG }}_win.zip"
          Compress-Archive -Path dist\FinabitMCP.exe -DestinationPath $zip
          "ZIP_NAME=$zip" >> $env:GITHUB_OUTPUT

      - name: SHA256
        id: sha
        shell: pwsh
        run: |
          $sha = (Get-FileHash -Algorithm SHA256 "${{ steps.zip.outputs.ZIP_NAME }}").Hash
          Set-Content -Path "${{ steps.zip.outputs.ZIP_NAME }}.sha256" -Value $sha -Encoding ascii
          "SHA=$sha" >> $env:GITHUB_OUTPUT

      - name: Create/Update GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.TAG }}
          name: MCP ${{ steps.vars.outputs.TAG }}
          body: |
            Automated release for ${{ steps.vars.outputs.TAG }}.
            SHA256: ${{ steps.sha.outputs.SHA }}
          draft: false
          prerelease: false
          files: |
            ${{ steps.zip.outputs.ZIP_NAME }}
            ${{ steps.zip.outputs.ZIP_NAME }}.sha256
          generate_release_notes: true
          make_latest: true
